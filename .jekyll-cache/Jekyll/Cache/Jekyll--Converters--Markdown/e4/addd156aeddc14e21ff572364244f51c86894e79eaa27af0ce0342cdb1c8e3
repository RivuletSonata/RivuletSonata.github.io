I"EA<h1 id="writing-motivation">Writing Motivation</h1>
<p>After a cursory study to the <strong>Linear Regression</strong>, I got some aerial view towards the algorithm. However recently I have reviewed this part in aspect of the mathematical derivation and code implementation,and discovered something new in conbinition of Statics knowledge. In view of my poor memory, I decide to record them in this low-level passage.</p>

<h1 id="introduction">Introduction</h1>
<p>Regression is one kind of <strong>Supervised learning</strong> tasks, and what I am going to talk here is particularly Linear Regression ,which is a strategy in <strong>Regression Learning</strong> and attempt to establish a linear relationship between the inputset X and the predicted output $f(x)$. So what we want to achieve is to determine a model and find its parameters.</p>

<p>One fault in ordinary linear regression lies in its inclination to the under-fitting problem. It applies a hyperplane to fit the whole training set. But when the training set do not satisfy a Linear Distribution, in most cases the result of a linear regression model will generate a problem of under-fitting.</p>

<p><img src="https://i.loli.net/2019/05/29/5cee862d5c15491757.png" alt="" /></p>

<p>The <strong>polynomial fit</strong> is a very possible way towards the problem which can fit all of the training data. However, it behaves quite poor when it comes to predicting new samples because it causes the over-fitting problem and fail to fit the real model.</p>

<p><strong>Locally Weighted Linear Regression</strong> performs as a rectification of the ordinary Linear xRegression. To intuitively understand the concept, LWLR adds a new weight to the Loss Funciton $L(w,b)=\frac{1}{2}\sum_{i=1}^m\mu^{i}(f(x^{i})-y^{i})^2$.</p>

<p>Among them, <strong>m</strong> stants for the number of training samples.
$f(x)=\theta^Tx$, 
$\mu^i$ is a non-negative weights value, generally using an exponential form:$\mu^i=e^{-\frac{(x^i-x)^2}{2\tau^2}}$, it looks like <strong>Normal Distribution</strong>,</p>

<p>Then we establish a Diagonal matrix $\psi$, s.t:
<script type="math/tex">\psi_{i,i}=\mu^i=e^{-\frac{(x^i-x)^2}{2\tau^2}}</script></p>

<p>$x$ stands for the new input.</p>

<p>$\tau$ stands for the extent to which the distant training data will be considered.
Smaller the value is ,deeper the fitting degree will be.</p>

<p>The Regularization Formula is $\theta = (X^T\psi X)^{-1}X^T\psi Y$ .
That is to say, every time we input new TEST Data, we will generate a new $\theta$ matrix.</p>

<p>We can intuitively understand the formula in this way: Smaller the distance between $x^i$ and the new $x$ is ,more significant the influence of the $i_{th}$ training data towards the result will be.</p>

<h1 id="code-implement">Code Implement</h1>
<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="k">def</span> <span class="nf">LoadData</span><span class="p">(</span><span class="nb">file</span><span class="p">):</span>
        <span class="k">try</span><span class="p">:</span>
                <span class="n">trainset</span><span class="o">=</span><span class="nb">open</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span>
                <span class="k">print</span><span class="p">(</span><span class="s">"Openfile successfully."</span><span class="p">)</span>
        <span class="k">except</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="s">"openfile failure"</span><span class="p">)</span>
                <span class="k">return</span>
        <span class="n">inset</span><span class="o">=</span><span class="p">[]</span>
        <span class="n">labelset</span><span class="o">=</span><span class="p">[]</span>
        <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">trainset</span><span class="o">.</span><span class="n">readlines</span><span class="p">():</span>
                <span class="n">line</span><span class="o">=</span><span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
                <span class="n">LineArr</span><span class="o">=</span><span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">'</span><span class="se">\t</span><span class="s">'</span><span class="p">)</span> <span class="c1">#cut into list
</span>                <span class="n">inset</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="nb">float</span><span class="p">(</span><span class="n">LineArr</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nb">float</span><span class="p">(</span><span class="n">LineArr</span><span class="p">[</span><span class="mi">1</span><span class="p">])])</span>
                <span class="n">labelset</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="nb">float</span><span class="p">(</span><span class="n">LineArr</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>
        <span class="k">return</span> <span class="n">inset</span><span class="p">,</span><span class="n">labelset</span>

<span class="k">def</span> <span class="nf">lwrtrain</span><span class="p">(</span><span class="n">testpoint</span><span class="p">,</span><span class="n">xarr</span><span class="p">,</span><span class="n">yarr</span><span class="p">,</span><span class="n">k</span><span class="o">=</span><span class="mf">1.0</span><span class="p">):</span>
        <span class="n">Xmat</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">mat</span><span class="p">(</span><span class="n">xarr</span><span class="p">)</span>
        <span class="n">Ymat</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">mat</span><span class="p">(</span><span class="n">yarr</span><span class="p">)</span>
        <span class="n">m</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">Xmat</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
        <span class="n">weights</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">eye</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
    
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">):</span>
                <span class="n">diffMat</span><span class="o">=</span> <span class="n">testpoint</span><span class="o">-</span><span class="n">Xmat</span><span class="p">[</span><span class="n">i</span><span class="p">,:]</span>
                <span class="n">weights</span><span class="p">[</span><span class="n">i</span><span class="p">,</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">exp</span><span class="p">(</span><span class="o">-</span><span class="p">(</span><span class="n">diffMat</span><span class="o">*</span><span class="p">(</span><span class="n">diffMat</span><span class="o">.</span><span class="n">T</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">k</span><span class="o">*</span><span class="n">k</span><span class="o">*</span><span class="mi">2</span><span class="p">)))</span>
        <span class="c1">#xTx=np.zeros((np.shape(Xmat)[1]),(np.shape(Xmat)[1]))
</span>
        <span class="n">xTx</span><span class="o">=</span><span class="n">Xmat</span><span class="o">.</span><span class="n">T</span> <span class="o">*</span> <span class="p">(</span><span class="n">weights</span> <span class="o">*</span> <span class="n">Xmat</span> <span class="p">)</span> <span class="c1">#(2,2)=(2*n)*(n*n)*(n*2)
</span>        <span class="k">if</span> <span class="n">np</span><span class="o">.</span><span class="n">linalg</span><span class="o">.</span><span class="n">det</span><span class="p">(</span><span class="n">xTx</span><span class="p">)</span><span class="o">==</span><span class="mi">0</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="s">"This matrix cannot do inverse"</span><span class="p">)</span>
                <span class="k">return</span>
        <span class="n">theta</span> <span class="o">=</span> <span class="n">xTx</span><span class="o">.</span><span class="n">I</span> <span class="o">*</span><span class="p">(</span><span class="n">Xmat</span><span class="o">.</span><span class="n">T</span> <span class="o">*</span><span class="p">(</span><span class="n">weights</span><span class="o">*</span><span class="n">Ymat</span><span class="o">.</span><span class="n">T</span><span class="p">))</span><span class="c1">#(2*1)=(2*2)*(2*n)*(n*n)*(n*1)
</span>        <span class="k">return</span> <span class="n">testpoint</span><span class="o">*</span><span class="n">theta</span>

<span class="k">def</span> <span class="nf">lwr</span><span class="p">(</span><span class="n">testArr</span><span class="p">,</span><span class="n">xarr</span><span class="p">,</span><span class="n">yarr</span><span class="p">,</span><span class="n">k</span><span class="o">=</span><span class="mf">1.0</span><span class="p">):</span>
        <span class="n">m</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="n">testArr</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
        <span class="n">ytest</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">m</span><span class="p">):</span>
                <span class="n">ytest</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">=</span><span class="n">lwrtrain</span><span class="p">(</span><span class="n">testArr</span><span class="p">[</span><span class="n">i</span><span class="p">],</span><span class="n">xarr</span><span class="p">,</span><span class="n">yarr</span><span class="p">,</span><span class="n">k</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">ytest</span>

<span class="k">def</span> <span class="nf">show</span><span class="p">(</span><span class="n">xarr</span><span class="p">,</span><span class="n">yarr</span><span class="p">,</span><span class="n">ytest</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">fig</span><span class="p">):</span>
        <span class="n">xMat</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">mat</span><span class="p">(</span><span class="n">xarr</span><span class="p">);</span><span class="n">yMat</span><span class="o">=</span><span class="n">np</span><span class="o">.</span><span class="n">mat</span><span class="p">(</span><span class="n">yarr</span><span class="p">)</span>

        <span class="c1">#对xarr排序
</span>        <span class="n">strInd</span> <span class="o">=</span> <span class="n">xMat</span><span class="p">[:,</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">argsort</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="c1">#从小到大数据的序号
</span>        <span class="n">xSort</span><span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="n">xMat</span><span class="p">,</span><span class="n">axis</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="c1">#xSort= xMat[strInd]#[:,0,:]
</span>
        <span class="c1">#Draw
</span>        <span class="n">ax</span> <span class="o">=</span> <span class="n">fig</span><span class="o">.</span><span class="n">add_subplot</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="n">a</span><span class="p">)</span>
        <span class="n">ax</span><span class="o">.</span><span class="n">plot</span><span class="p">(</span><span class="n">xSort</span><span class="p">,</span><span class="n">ytest</span><span class="p">[</span><span class="n">strInd</span><span class="p">])</span><span class="c1">#line
</span>        <span class="n">ax</span><span class="o">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">xMat</span><span class="p">[:,</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">flatten</span><span class="p">()</span><span class="o">.</span><span class="n">getA</span><span class="p">()</span> <span class="p">,</span> <span class="n">yMat</span><span class="o">.</span><span class="n">flatten</span><span class="p">()</span><span class="o">.</span><span class="n">getA</span><span class="p">())</span><span class="c1">#point
</span>        <span class="c1">#only accept type:array, funciton flatten() return a matrix
</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">title</span><span class="p">(</span><span class="s">"k= </span><span class="si">%</span><span class="s">f"</span> <span class="o">%</span><span class="n">k</span><span class="p">)</span>
        <span class="c1">#plt.show()
</span>
<span class="k">def</span> <span class="nf">run_main</span><span class="p">():</span>
        <span class="n">xarr</span><span class="p">,</span><span class="n">yarr</span> <span class="o">=</span> <span class="n">LoadData</span><span class="p">(</span><span class="s">"ex1.txt"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"LoadData Done."</span><span class="p">)</span>

        <span class="n">Kk</span><span class="o">=</span><span class="p">[</span><span class="mf">1.0</span><span class="p">,</span><span class="mf">0.01</span><span class="p">,</span><span class="mf">0.005</span><span class="p">,</span><span class="mf">0.002</span><span class="p">]</span>
        <span class="n">a</span><span class="o">=</span><span class="mi">0</span>
        <span class="n">fig</span><span class="o">=</span><span class="n">plt</span><span class="o">.</span><span class="n">figure</span><span class="p">()</span>
        <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="n">Kk</span><span class="p">:</span>
                <span class="n">a</span><span class="o">=</span><span class="n">a</span><span class="o">+</span><span class="mi">1</span>
                <span class="n">ytest</span><span class="o">=</span><span class="n">lwr</span><span class="p">(</span><span class="n">xarr</span><span class="p">,</span><span class="n">xarr</span><span class="p">,</span><span class="n">yarr</span><span class="p">,</span><span class="n">k</span><span class="p">)</span>
                <span class="n">show</span><span class="p">(</span><span class="n">xarr</span><span class="p">,</span><span class="n">yarr</span><span class="p">,</span><span class="n">ytest</span><span class="p">,</span><span class="n">k</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">fig</span><span class="p">)</span>
        <span class="n">plt</span><span class="o">.</span><span class="n">show</span><span class="p">()</span>

<span class="k">if</span> <span class="n">__name__</span><span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
        <span class="n">run_main</span><span class="p">()</span>

</code></pre></div></div>
<h1 id="result-analysis">Result Analysis</h1>
<p>The result is presented below:
<img src="https://i.loli.net/2019/05/29/5cee9eff2b17273954.png" alt="" /></p>
:ET